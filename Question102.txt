102. Binary Tree Level Order Traversal

Given a binary tree, return the level order traversal of its nodes' values. (ie, from left to right, level by level).

For example:
Given binary tree [3,9,20,null,null,15,7],

    3
   / \
  9  20
    /  \
   15   7

return its level order traversal as:

[
  [3],
  [9,20],
  [15,7]
]



Answer:

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution 
{
public:
	vector<vector<int>> levelOrder(TreeNode* root)
	{
		vector<vector<int> > result;
		if (root == NULL)
		{
			return result;
		}

		queue<TreeNode*> myQueue;
		myQueue.push(root);
		while (myQueue.empty() == false)
		{
			vector<int> level;
			int numberOfNode_level = myQueue.size();
			while (numberOfNode_level > 0)
			{
				TreeNode* top = myQueue.front();
				myQueue.pop();
				numberOfNode_level--;
				level.push_back(top->val);
				if (top->left != NULL)
				{
					myQueue.push(top->left);
				}
				if (top->right != NULL)
				{
					myQueue.push(top->right);
				}
			}
			result.push_back(level);
		}
		return result;
	}

};